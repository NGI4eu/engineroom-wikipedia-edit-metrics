# -*- coding: utf-8 -*-## Extracts page IDs from wiki pages (given their title).## EXECUTE:# python get_article_multilanguage_ids.py './data/NGI_technology_keywords.csv' './data/tech/id_tech'#import pandas as pdimport MySQLdb as mdbimport sysimport codecsimport datetimeimport ConfigParser#config = ConfigParser.RawConfigParser()#config.read('tool_labs.cfg')reload(sys)sys.setdefaultencoding('utf-8')if sys.stdout.encoding is None:	sys.stdout = codecs.open("/dev/stdout", "w", 'utf-8')### SETTINGSinput_file_name = sys.argv[1]output_file_name = sys.argv[2]if len(sys.argv)>3:	lang = sys.argv[3]with open('DB_info') as DB_info:	DB_USER_NAME = DB_info.readline().strip('\n')	DB_PASSWORD = DB_info.readline().strip('\n')## extract IDs from a list of titles#def extract_data(page_titles, mysql_cur, output_file):	page_titles_asstring = ','.join(['%s'] * len(page_titles))	mysql_cur.execute( 'SELECT page_title, page_id FROM page WHERE page_namespace = 0 AND page_title IN (%s)' % page_titles_asstring, page_titles)	rows = mysql_cur.fetchall()	print '\nLang: '+ lang	print 'Original size' + str(len(page_titles))	print 'Size words found' + str(len(rows))	for row in rows:		output_file.write(row[0] + '\t' + str(row[1]) + '\n')### EXECUTEprint "Current date and time [START]: " , datetime.datetime.now()df = pd.read_csv(input_file_name, index_col=0)langs = ['en', 'de', 'fr', 'es', 'it', 'sv', 'nl', 'pl', 'ru']for lang in langs:	output_file = codecs.open(output_file_name+'_'+lang+'.csv', 'w', 'UTF-8')	mysql_con = mdb.connect(lang+'wiki.labsdb', DB_USER_NAME, DB_PASSWORD, lang+'wiki_p')	mysql_con.set_character_set('utf8')	page_titles = list(set(df[~df[lang].isnull()][lang]))	with mysql_con:		mysql_cur = mysql_con.cursor()		extract_data(page_titles, mysql_cur, output_file)	output_file.close()print "Current date and time [FIN]: " , datetime.datetime.now()